name: Create Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get package version
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get latest GitHub release version
        id: get_latest_release
        run: |
          LATEST=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name' | sed 's/^v//')
          if [[ "$LATEST" == "null" || -z "$LATEST" ]]; then
          LATEST="0.0.0"
          fi
          echo "latest=$LATEST" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare_versions
        run: |
          echo "Current version: ${{ steps.get_version.outputs.version }}"
          echo "Latest release: ${{ steps.get_latest_release.outputs.latest }}"

          if [ "$(printf '%s\n%s' "${{ steps.get_version.outputs.version }}" "${{ steps.get_latest_release.outputs.latest }}" | sort -V | head -n1)" = "${{ steps.get_latest_release.outputs.latest }}" ] && \
             [ "${{ steps.get_version.outputs.version }}" != "${{ steps.get_latest_release.outputs.latest }}" ]; then
            echo "New version is higher than latest release, continue."
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            echo "No new version detected or version is not higher, skipping release."
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Extract changelog for release
        id: extract_changelog
        if: steps.compare_versions.outputs.should_release == 'true'
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          NOTES=$(sed -n "/^## $VERSION /,/^## /p" CHANGELOG.md | sed '$d' | sed "1d")
          if [ -z "$NOTES" ]; then
            echo "No changelog section found for version $VERSION"
            exit 1
          fi
          echo "::set-output name=notes::$NOTES"

      - name: Create GitHub Release
        if: steps.compare_versions.outputs.should_release == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.get_version.outputs.version }}"
          name: "v${{ steps.get_version.outputs.version }}"
          body: ${{ steps.extract_changelog.outputs.notes }}
          draft: false
          prerelease: false
